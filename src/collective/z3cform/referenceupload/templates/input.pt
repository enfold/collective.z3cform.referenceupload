<tal:root>
<i18n:domain i18n:domain="collective.z3cform.referenceupload">

    <style>
        .querySelectSearch div {display:none};
    </style>
    <script type="text/javascript">
        function updateReferenceUploadWidget(fieldId, option) {
            var upload_box = $('#box_' + fieldId);
            var select_box = $('#formfield-' + fieldId + '-widgets-query');
            var options = $('#' + fieldId + '-input-fields span.option');
            switch(option){
                case 'remove':
                case 'keep':
                    upload_box.hide();
                    select_box.hide();
                    options.hide();
                    break;
                case 'select':
                    upload_box.hide();
                    select_box.show();
                    options.show();
                    break;
                case 'upload':
                    upload_box.show();
                    select_box.hide();
                    options.hide();
                    break;
            }
        }
        $(document).ready(function() {
            var selected_options = $("input[id^='form.widgets']:checked")
            selected_options.each(function(index) {
                var fieldId = this.id.split('.').join('-').split('_')[0];
                var fieldValue = this.value;
                updateReferenceUploadWidget(fieldId, fieldValue);
                if (fieldValue == 'select') {
                    var query_widget = $("#" + fieldId + "-widgets-query");
                    var base_id = query_widget[0].id.replace(/-widgets-query$/,"");
                    var widget_base = $('#'+base_id+"-input-fields");
                    widget_base.data('input_type', 'radio');
                    var original = $('#' + fieldId + '_raw_value');
                    console.log('#' + fieldId + '_raw_value', original);
                    formwidget_autocomplete_new_value(query_widget, original.attr('value'), original.attr('title'));
                }
            });
        });
    </script>

    <tal:display replace="structure view/render_display" />

    <div tal:define="workflowTool context/portal_workflow;
                     fieldName string:${view/name};
                     fieldId string:${view/id};
                     obj view/object_value;
                     file_upload python: request.get(fieldName + '_upload');
                     option python: request.get(fieldName + '_option');">

      <tal:hasValue tal:condition="view/formatted_value">

        <tal:wfstate condition="python: workflowTool.getChainForPortalType(obj.portal_type)">
          Review state: <tal:wfstate replace="python: workflowTool.getInfoFor(obj, 'review_state')" />
          <br />
        </tal:wfstate>

        <input type="hidden"
              tal:attributes="id string:${fieldId}_raw_value;
                              name string:${fieldName}_raw_value;
                              title obj/Title;
                              value view/raw_value;" />

        <input class="noborder"
               type="radio"
               value="keep"
               checked="checked"
               tal:attributes="name string:${fieldName}_option;
                               id string:${fieldName}_keep;
                               checked python: option not in ['remove', 'select', 'upload'] and 'checked' or None;
                               onclick string:updateReferenceUploadWidget('$fieldId', 'keep')"/>
        <label for=""
               tal:attributes="for string:${fieldName}_keep"
               i18n:translate="label_keep_existing_content">
               Keep existing value
        </label>
        <br />
        <input class="noborder"
               type="radio"
               value="remove"
               tal:attributes="name string:${fieldName}_option;
                               id string:${fieldName}_remove;
                               checked python: option == 'remove' and 'checked' or None;
                               onclick string:updateReferenceUploadWidget('$fieldId', 'remove')"/>
        <label for=""
               tal:attributes="for string:${fieldName}_remove"
               i18n:translate="label_remove_existing_reference">
               Remove existing value
        </label>
        <br />
      </tal:hasValue>
      <input class="noborder"
             type="radio"
             value="select"
             tal:attributes="name string:${fieldName}_option;
                             id string:${fieldName}_select;
                             checked python: option == 'select' and 'checked' or None;
                             onclick string:updateReferenceUploadWidget('$fieldId', 'select')"/>
      <label for=""
             tal:attributes="for string:${fieldName}_select"
             i18n:translate="label_reference_existing_content">
             Reference an existing content item
      </label>
      <br />
      <input class="noborder"
             type="radio"
             value="upload"
             tal:attributes="name string:${fieldName}_option;
                             id string:${fieldName}_upload;
                             checked python: option == 'upload' and 'checked' or None;
                             onclick string:updateReferenceUploadWidget('$fieldId', 'upload')"/>
      <label for=""
             tal:attributes="for string:${fieldName}_upload;"
             i18n:translate="label_upload_new_file">
             Upload a new file and reference it
      </label>


      <div id="box_upload" tal:attributes="id string:box_${fieldId}"
           style="margin-top: 0.5em; display:none;">
          <div id="inputs" tal:attributes="id string:${fieldName}_inputs">
              <input type="file"
                     size="30"
                     tal:attributes="value string:${fieldName}_file;
                                     name string:${fieldName}_file;
                                     id string:${fieldName}_file" />
          </div>
      </div>

    </div>

    <div tal:attributes="id string:${view/id}-autocomplete">
        <tal:block replace="structure view/subform/render" />
        <div tal:attributes="id string:${view/id}-input-fields"
             class="autocompleteInputWidget"
             tal:content="structure view/renderQueryWidget" />
    </div>
    <div class="contenttreeWindow"
         tal:attributes="id string:${view/id}-contenttree-window">
        <div class="contenttreeWindowHeader">
            <h2 i18n:translate="heading_contenttree_browse">Browse for items</h2>
            <em tal:condition="view/multi_select"
                i18n:translate="heading_contenttree_help">Press Ctrl to select multiple items.
            </em>
        </div>
        <div class="contenttreeWidget"
            tal:attributes="id string:${view/id}-contenttree">
        </div>
        <div class="contenttreeWindowActions">
            <input class="context contentTreeAdd" type="button"
                   i18n:attributes="value label_contenttree_add" value="Add"/>
            <input class="standalone contentTreeCancel"
                   i18n:attributes="value label_contenttree_cancel" type="button" value="Cancel"/>
        </div>
    </div>
    <script type="text/javascript" tal:content="structure view/js"></script>
</i18n:domain>

</tal:root>